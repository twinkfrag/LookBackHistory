<UserControl x:Class="LookBackHistory.Views.MainTabItem"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:v="clr-namespace:LookBackHistory.Views"
			 xmlns:vm="clr-namespace:LookBackHistory.ViewModels"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 mc:Ignorable="d"
			 d:DataContext="{d:DesignData /SampleData/MainTabSampleData.xaml}"
             d:DesignHeight="300" d:DesignWidth="300">

	<i:Interaction.Triggers>

		<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
		<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
		<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

		<!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
		<i:EventTrigger EventName="ContentRendered">
			<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
		</i:EventTrigger>

		<!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
		<i:EventTrigger EventName="Closed">
			<l:DataContextDisposeAction/>
		</i:EventTrigger>

		<!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

	</i:Interaction.Triggers>

	<Grid>
		<StackPanel>
			<StackPanel Orientation="Horizontal">
				<Button Command="{Binding LoadFirefoxCommand, Mode=OneWay}" Content="Load Firefox" 
					HorizontalAlignment="Left" VerticalAlignment="Top" 
					Width="Auto" />
				<Border Margin="5" Height="5" />
				<Button Command="{Binding LoadChromeCommand, Mode=OneWay}" Content="Load Chrome"
					HorizontalAlignment="Left" VerticalAlignment="Top" 
					Width="Auto" />
			</StackPanel>
			<Border Height="1" Margin="0, 5" />
			<DockPanel>
				<StackPanel DockPanel.Dock="Left">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="100" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock Text="Title" Grid.Row="0" Grid.Column="0"/>
						<TextBox x:Name="TitleBox" Width="600" Text="{Binding Path=TitleSearchText, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
						<TextBlock Text="URL" Grid.Row="1" Grid.Column="0" />
						<TextBox x:Name="UrlBox" Width="600" Text="{Binding Path=UrlSearchText, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" />
						<TextBlock Text="Begin Date" Grid.Row="2" Grid.Column="0" />
						<DatePicker Grid.Row="2" Grid.Column="1" x:Name="BeginDatePicker"
							SelectedDate="{Binding Path=BeginDate, Mode=TwoWay}" />
						<TextBlock Text="End Date" Grid.Row="3" Grid.Column="0" />
						<DatePicker Grid.Row="3" Grid.Column="1" x:Name="EndDatePicker" 
							SelectedDate="{Binding Path=EndDate, Mode=TwoWay}" />
					</Grid>
				</StackPanel>
				<Button Command="{Binding SearchCommand, Mode=OneWay}" Content="Search" DockPanel.Dock="Right" />
			</DockPanel>
		</StackPanel>
	</Grid>
</UserControl>
